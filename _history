{"entries":[{"timestamp":1748009582532,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"O;4XvZ6VxXPg|{LfG*+E\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"S]u|KHrckt+pl876h5qf\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n"],[-1,"\n\nnamespace stepper {\n\n    let stpWave = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    let stpFull = [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1];\n\n    export class Motor {\n\n        private input1: DigitalPin;\n        private input2: DigitalPin;\n        private input3: DigitalPin;\n        private input4: DigitalPin;\n        private delay: number;\n\n        setPins(in1: DigitalPin, in2: DigitalPin, in3: DigitalPin, in4: DigitalPin): void {\n            this.input1 = in1;\n            this.input2 = in2;\n            this.input3 = in3;\n            this.input4 = in4;\n        }\n\n        //% blockId=runAntiClockwise block=\"run %motor|%steps|steps anti-clockwise\"\n        //% weight=85 blockGap=8\n        //% steps.defl=100\n        runAntiClockWise(steps: number) {\n            let j = 0;\n            for (let i = 0; i < steps; i++) {\n\n                pins.digitalWritePin(this.input1, stpWave[j]);\n                pins.digitalWritePin(this.input2, stpWave[++j]);\n                pins.digitalWritePin(this.input3, stpWave[++j]);\n                pins.digitalWritePin(this.input4, stpWave[++j]);\n                ++j;\n                if (j > 15) { j = 0 }\n                basic.pause(this.delay);\n            }\n        }\n\n        //% blockId=runClockwise block=\"run %motor|%steps|steps clockwise\"\n        //% weight=85 blockGap=8\n        //% steps.defl=100\n        runClockWise(steps: number) {\n            let j = 15;\n            for (let i = 0; i < steps; i++) {\n\n                pins.digitalWritePin(this.input1, stpWave[j]);\n                pins.digitalWritePin(this.input2, stpWave[--j]);\n                pins.digitalWritePin(this.input3, stpWave[--j]);\n                pins.digitalWritePin(this.input4, stpWave[--j]);\n                --j;\n                if (j < 0) { j = 15 }\n                basic.pause(this.delay);\n            }\n        }\n\n        //% blockId=set_motor_calibration block=\"%motor|set delay between steps to %delayNum|ms\"\n        //% weight=60 blockGap=8 \n        //% delayNum.defl=2     \n        setDelay(delayNum: number): void {\n            this.delay = delayNum;\n        }\n\n        //% blockId=stopMotor block=\"stop %motor\"\n        //% weight=70 blockGap=8\n        stopMotor(): void {\n            pins.digitalWritePin(this.input1, 0);\n            pins.digitalWritePin(this.input2, 0);\n            pins.digitalWritePin(this.input3, 0);\n            pins.digitalWritePin(this.input4, 0);\n        }\n    }\n\n    //% blockId=\"stepperMotor_setMotor\" block=\"in1 %in1|in2 %in2|in3 %in3|in4 %in4\"\n    //% in1.defl=DigitalPin.P0\n    //% in2.defl=DigitalPin.P1\n    //% in3.defl=DigitalPin.P2\n    //% in4.defl=DigitalPin.P8\n    //% weight=90 blockGap=8\n    //% parts=\"motor\"\n    //% blockSetVariable=motor\n    export function createMotor(in1: DigitalPin, in2: DigitalPin, in3: DigitalPin, in4: DigitalPin): Motor {\n        let motor = new Motor();\n        motor.setPins(in1, in2, in3, in4);\n        motor.setDelay(2);\n        return motor;\n    }\n\n}\n"]],"start1":0,"start2":0,"length1":2970,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":239,"start2":239,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1748009582531,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"UnipolarStepper\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1748009707322}